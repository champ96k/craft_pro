name: Test project in a PR
on: [pull_request]
jobs:
  test_mac:
    runs-on: macos-latest
    defaults:
      run:
        # Run everything from within the craft_pro project directory
        working-directory: ./craft_pro
    steps:
      # Checkout the PR branch
      - uses: actions/checkout@v3

      # Setup Flutter environment
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          architecture: x64

      # Download all the packages that the app uses
      - run: flutter pub get

      # TODO: run static analysis here when we get to zero analysis warnings

      # Run all tests
      - run: flutter test

  test_windows:
    runs-on: windows-latest
    defaults:
      run:
        # Run everything from within the craft_pro project directory
        working-directory: ./craft_pro
    steps:
      # Checkout the PR branch
      - uses: actions/checkout@v3

      # Setup Flutter environment
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      # Download all the packages that the app uses
      - run: flutter pub get

      # TODO: run static analysis here when we get to zero analysis warnings

      # Run all tests
      - run: flutter test

  test_linux:
    runs-on: ubuntu-latest
    defaults:
      run:
        # Run everything from within the craft_pro project directory
        working-directory: ./craft_pro
    steps:
      # Checkout the PR branch
      - uses: actions/checkout@v3

      # Setup Flutter environment
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      # Download all the packages that the app uses
      - run: flutter pub get

      # TODO: run static analysis here when we get to zero analysis warnings

      # Run all tests
      - run: flutter test

  test_craft_pro_markdown:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./craft_pro_markdown
    steps:
      # Checkout the PR branch
      - uses: actions/checkout@v3

      # Setup Flutter environment
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      # Download all the packages that the app uses
      - run: flutter pub get

      # TODO: Enforce static analysis

      # Run all tests
      - run: flutter test

  test_super_text_layout:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./super_text_layout
    steps:
      # Checkout the PR branch
      - uses: actions/checkout@v3

      # Setup Flutter environment
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      # Download all the packages that the app uses
      - run: flutter pub get

      # Enforce static analysis
      - run: flutter analyze

      # Run all tests
      - run: flutter test

  test_goldens_super_text_layout:
    runs-on: macos-latest
    defaults:
      run:
        working-directory: ./super_text_layout
    steps:
      # Checkout the PR branch
      - uses: actions/checkout@v3

      # Setup Flutter environment
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          architecture: x64

      # Download all the packages that the app uses
      - run: flutter pub get

      # Run all golden tests
      - run: flutter test test_goldens

  test_attributed_text:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./attributed_text
    steps:
      # Checkout the PR branch
      - uses: actions/checkout@v3

      # Setup Dart
      - uses: dart-lang/setup-dart@v1

      # Install app dependencies
      - run: dart pub get

      # Enforce static analysis
      - run: dart analyze

      # Run all tests
      - run: dart test